{"ast":null,"code":"import io from 'socket.io-client';\n\nfunction DataMessagesHistory() {\n  const socket = io('/');\n\n  function connect() {\n    return new Promise((resolve, reject) => {\n      socket.on('connect', function () {\n        resolve(console.log(\"CONNECTED\"));\n      });\n    });\n  }\n\n  function getDataHistory() {\n    return new Promise((resolve, reject) => {\n      socket.on('messages', data => {\n        console.log(\"messages\", data);\n        resolve(data);\n      });\n    });\n  }\n\n  return connect().then(getDataHistory);\n}\n\nfunction DataMessagesUpdate(socket, cb) {\n  socket.on('new_message', function (message) {\n    console.log(\"new_message\", message);\n    cb(null, message);\n  });\n}\n\nexport { DataMessagesUpdate };\nexport { DataMessagesHistory };","map":{"version":3,"sources":["/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Socket/socket.js"],"names":["io","DataMessagesHistory","socket","connect","Promise","resolve","reject","on","console","log","getDataHistory","data","then","DataMessagesUpdate","cb","message"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;;AAEA,SAASC,mBAAT,GAA8B;AAE1B,QAAMC,MAAM,GAAGF,EAAE,CAAC,GAAD,CAAjB;;AAEA,WAASG,OAAT,GAAkB;AACd,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCJ,MAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,YAAU;AAC3BF,QAAAA,OAAO,CAACG,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAD,CAAP;AACH,OAFD;AAGH,KAJM,CAAP;AAKH;;AAED,WAASC,cAAT,GAAyB;AACrB,WAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACnCJ,MAAAA,MAAM,CAACK,EAAP,CAAU,UAAV,EAAsBI,IAAI,IAAG;AACzBH,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AACAN,QAAAA,OAAO,CAACM,IAAD,CAAP;AACH,OAHD;AAIH,KALM,CAAP;AAMH;;AAED,SAAOR,OAAO,GACbS,IADM,CACDF,cADC,CAAP;AAGH;;AAED,SAASG,kBAAT,CAA4BX,MAA5B,EAAoCY,EAApC,EAAuC;AACnCZ,EAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAAyB,UAASQ,OAAT,EAAiB;AACxCP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,OAA3B;AACAD,IAAAA,EAAE,CAAC,IAAD,EAAOC,OAAP,CAAF;AACD,GAHD;AAMH;;AAED,SAAQF,kBAAR;AACA,SAAQZ,mBAAR","sourcesContent":["import io from 'socket.io-client';\n\nfunction DataMessagesHistory(){\n    \n    const socket = io('/');\n\n    function connect(){\n        return new Promise((resolve, reject) => {\n            socket.on('connect', function(){\n                resolve(console.log(\"CONNECTED\")) \n            })\n        })\n    }\n\n    function getDataHistory(){\n        return new Promise((resolve, reject) =>{\n            socket.on('messages', data =>{\n                console.log(\"messages\", data);\n                resolve(data);\n            })\n        })\n    }\n\n    return connect()\n    .then(getDataHistory)\n\n}\n\nfunction DataMessagesUpdate(socket, cb){\n    socket.on('new_message', function(message){\n      console.log(\"new_message\", message);\n      cb(null, message);\n    });\n  \n      \n}\n\nexport {DataMessagesUpdate};\nexport {DataMessagesHistory};"]},"metadata":{},"sourceType":"module"}