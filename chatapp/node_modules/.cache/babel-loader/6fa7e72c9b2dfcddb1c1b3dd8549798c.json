{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = () => {\n  const port = 'localhost:3000';\n  const [input, updateInput] = useState(\"\");\n  const [text, updateText] = useState([]);\n  const [ownText, updateOwnText] = useState(\"\");\n  useEffect(() => {\n    socket = io(port);\n    console.log(socket);\n  }, [port]);\n  const addMessage = useCallback(data => {\n    let copyText = text;\n    copyText.push(data);\n    updateText(copyText);\n    console.log(copyText);\n  }, [text]);\n  useEffect(() => {\n    socket = io(port);\n    socket.on('message', data => {\n      //addMessage(data);\n      console.log(data);\n    });\n  }, [port, addMessage]);\n\n  const onChange = e => {\n    let value = e.target.value;\n    updateInput(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    socket = io(port);\n    socket.emit('new_message', input);\n    addOwnMessage(input);\n    updateInput(\"\");\n  };\n\n  const addOwnMessage = data => {\n    let copyText = text;\n    copyText.push(data);\n    updateOwnText(copyText);\n    console.log(copyText);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }, \"Chat\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }\n  })), text.map(data => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"data\");\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, ownText));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js"],"names":["React","useEffect","useState","useCallback","io","socket","Chat","port","input","updateInput","text","updateText","ownText","updateOwnText","console","log","addMessage","data","copyText","push","on","onChange","e","value","target","onSubmit","preventDefault","emit","addOwnMessage","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAMC,IAAI,GAAG,gBAAb;AACA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,IAAD,EAAOC,UAAP,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACU,OAAD,EAAUC,aAAV,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AAEAD,EAAAA,SAAS,CAAE,MAAK;AACbI,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEF,GAJQ,EAIP,CAACE,IAAD,CAJO,CAAT;AAMA,QAAMS,UAAU,GAAGb,WAAW,CAAEc,IAAD,IAAU;AACrC,QAAIC,QAAQ,GAAGR,IAAf;AACAQ,IAAAA,QAAQ,CAACC,IAAT,CAAcF,IAAd;AACAN,IAAAA,UAAU,CAACO,QAAD,CAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,GAL6B,EAK3B,CAACR,IAAD,CAL2B,CAA9B;AAOAT,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAF,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAsBH,IAAD,IAAU;AAC3B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,KAHD;AAIH,GANQ,EAMN,CAACV,IAAD,EAAOS,UAAP,CANM,CAAT;;AAQA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACAd,IAAAA,WAAW,CAACc,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;AAEArB,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAF,IAAAA,MAAM,CAACsB,IAAP,CAAY,aAAZ,EAA2BnB,KAA3B;AACAoB,IAAAA,aAAa,CAACpB,KAAD,CAAb;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAPD;;AASA,QAAMmB,aAAa,GAAIX,IAAD,IAAU;AAC5B,QAAIC,QAAQ,GAAGR,IAAf;AACAQ,IAAAA,QAAQ,CAACC,IAAT,CAAcF,IAAd;AACAJ,IAAAA,aAAa,CAACK,QAAD,CAAb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,GALD;;AASA,sBAAO,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,IAAA,QAAQ,EAAIO,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFF,EAMGX,IAAI,CAACmB,GAAL,CAASZ,IAAI,IAAI;AACd,wBAAO;AAAG,MAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,GAFA,CANH,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,OAAJ,CAVF,CAAP;AAYH,CA/DD;;AAiEA,eAAeN,IAAf","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = () => {\n\n    const port = 'localhost:3000'\n    const [input, updateInput] = useState(\"\");\n    const [text, updateText] = useState([]);\n    const [ownText, updateOwnText] = useState(\"\");\n\n    useEffect( ()=> {\n       socket = io(port)\n       console.log(socket)\n       \n    },[port]);\n\n    const addMessage = useCallback((data) => {\n        let copyText = text;\n        copyText.push(data)\n        updateText(copyText);\n        console.log(copyText)\n    }, [text]);\n\n    useEffect( () => {\n        socket = io(port);\n        socket.on('message', (data) => {\n            //addMessage(data);\n            console.log(data)\n        })\n    }, [port, addMessage])\n\n    const onChange = (e) => {\n        let value = e.target.value;\n        updateInput(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        socket = io(port)\n        socket.emit('new_message', input);\n        addOwnMessage(input);\n        updateInput(\"\");\n    }\n\n    const addOwnMessage = (data) => {\n        let copyText = text;\n        copyText.push(data)\n        updateOwnText(copyText);\n        console.log(copyText)\n    };\n\n\n\n    return <>\n             <h1>Chat</h1>\n             <form onSubmit = {onSubmit}>\n                 <input onChange={onChange}></input>\n                 <button></button>\n             </form>\n             {text.map(data => {\n                 return <p key={data}>data</p>\n             })\n             } \n             <p>{ownText}</p>\n           </>\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}