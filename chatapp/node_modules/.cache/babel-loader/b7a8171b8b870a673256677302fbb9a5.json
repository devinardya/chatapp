{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nlet socket = io('localhost:3000');\n\nconst Chat = ({\n  user\n}) => {\n  const [input, updateInput] = useState(\"\");\n  const [text, updateText] = useState([]);\n  const addMessage = useCallback(data => {\n    let message = data;\n    let copyMessage = [...text];\n    copyMessage.splice(0, 1);\n    updateText([...copyMessage, message]);\n  }, [text]);\n  useEffect(() => {\n    socket.on('message', data => {\n      addMessage(data);\n      console.log(data);\n    });\n  }, [addMessage]);\n\n  const onChange = e => {\n    let value = e.target.value;\n    updateInput(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    socket.emit('new_message', input);\n    let message = input;\n    let copyMessage = [...text];\n    copyMessage.splice(0, 1);\n    updateText([...copyMessage, message]);\n    updateInput(\"\");\n  };\n\n  console.log(\"USERNAME\", user);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, \"Chat\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }\n  })), text.map(data => {\n    console.log(data);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, data);\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js"],"names":["React","useEffect","useState","useCallback","io","socket","Chat","user","input","updateInput","text","updateText","addMessage","data","message","copyMessage","splice","on","console","log","onChange","e","value","target","onSubmit","preventDefault","emit","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAM,GAAGD,EAAE,CAAC,gBAAD,CAAf;;AAEA,MAAME,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAErB,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,IAAD,EAAOC,UAAP,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAGA,QAAMU,UAAU,GAAGT,WAAW,CAAEU,IAAD,IAAU;AACrC,QAAIC,OAAO,GAAGD,IAAd;AACA,QAAIE,WAAW,GAAG,CAAC,GAAGL,IAAJ,CAAlB;AACAK,IAAAA,WAAW,CAACC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB;AACAL,IAAAA,UAAU,CAAC,CAAC,GAAGI,WAAJ,EAAiBD,OAAjB,CAAD,CAAV;AAEH,GAN6B,EAM3B,CAACJ,IAAD,CAN2B,CAA9B;AAQAT,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAsBJ,IAAD,IAAU;AAC3BD,MAAAA,UAAU,CAACC,IAAD,CAAV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,KAHD;AAIH,GALQ,EAKN,CAACD,UAAD,CALM,CAAT;;AAOA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACAb,IAAAA,WAAW,CAACa,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;AAEApB,IAAAA,MAAM,CAACqB,IAAP,CAAY,aAAZ,EAA2BlB,KAA3B;AAEA,QAAIM,OAAO,GAAGN,KAAd;AACA,QAAIO,WAAW,GAAG,CAAC,GAAGL,IAAJ,CAAlB;AACAK,IAAAA,WAAW,CAACC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB;AACAL,IAAAA,UAAU,CAAC,CAAC,GAAGI,WAAJ,EAAiBD,OAAjB,CAAD,CAAV;AACAL,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAVD;;AAWAS,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBZ,IAAvB;AAEA,sBAAO,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,IAAA,QAAQ,EAAIiB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFF,EAMEV,IAAI,CAACiB,GAAL,CAASd,IAAI,IAAI;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,wBAAO;AAAG,MAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,IAAf,CAAP;AACH,GAHD,CANF,CAAP;AAYH,CAnDD;;AAqDA,eAAeP,IAAf","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport io from 'socket.io-client';\n\nlet socket = io('localhost:3000');\n\nconst Chat = ({user}) => {\n\n    const [input, updateInput] = useState(\"\");\n    const [text, updateText] = useState([]);\n\n\n    const addMessage = useCallback((data) => {\n        let message = data;\n        let copyMessage = [...text];\t\n        copyMessage.splice(0, 1);\t\n        updateText([...copyMessage, message]);\n        \n    }, [text])\n\n    useEffect( () => {\n        socket.on('message', (data) => {\n            addMessage(data);\n            console.log(data)\n        })\n    }, [addMessage])\n\n    const onChange = (e) => {\n        let value = e.target.value;\n        updateInput(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        socket.emit('new_message', input);\n      \n        let message = input;\n        let copyMessage = [...text];\t\n        copyMessage.splice(0, 1);\t\n        updateText([...copyMessage, message]);\n        updateInput(\"\");\n    }\n    console.log(\"USERNAME\",user)\n\n    return <>\n             <h1>Chat</h1>\n             <form onSubmit = {onSubmit}>\n                 <input onChange={onChange}></input>\n                 <button></button>\n             </form>\n            {text.map(data => {\n                 console.log(data)\n                 return <p key={data}>{data}</p>\n             })\n             } \n           </>\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}