{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = () => {\n  const port = 'localhost:3000';\n  const [input, updateInput] = useState(\"\");\n  const [text, updateText] = useState([]);\n  useEffect(() => {\n    socket = io(port);\n    console.log(socket);\n  }, [port]);\n  const addMessage = useCallback(data => {\n    let copyText = [...text];\n    updateText(...copyText, data);\n  }, [text]);\n  useEffect(() => {\n    socket = io(port);\n    socket.on('message', data => {\n      addMessage(data);\n      console.log(data);\n    });\n  }, [addMessage]);\n\n  const onChange = e => {\n    let value = e.target.value;\n    updateInput(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    socket = io(port);\n    socket.emit('new_message', input);\n    addOwnMessage(input);\n    updateInput(\"\");\n  };\n\n  const addOwnMessage = data => {\n    let copyText = [...text];\n    updateText([...copyText, data]);\n    console.log(copyText);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }\n  }, \"Chat\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 18\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Chat/Chat.js"],"names":["React","useEffect","useState","useCallback","io","socket","Chat","port","input","updateInput","text","updateText","console","log","addMessage","data","copyText","on","onChange","e","value","target","onSubmit","preventDefault","emit","addOwnMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAMC,IAAI,GAAG,gBAAb;AACA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACQ,IAAD,EAAOC,UAAP,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAE,MAAK;AACbI,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEF,GAJQ,EAIP,CAACE,IAAD,CAJO,CAAT;AAMA,QAAMO,UAAU,GAAGX,WAAW,CAAEY,IAAD,IAAU;AACrC,QAAIC,QAAQ,GAAG,CAAC,GAAGN,IAAJ,CAAf;AACAC,IAAAA,UAAU,CAAC,GAAGK,QAAJ,EAAcD,IAAd,CAAV;AAEH,GAJ6B,EAI3B,CAACL,IAAD,CAJ2B,CAA9B;AAMAT,EAAAA,SAAS,CAAE,MAAM;AACbI,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAF,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAsBF,IAAD,IAAU;AAC3BD,MAAAA,UAAU,CAACC,IAAD,CAAV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,KAHD;AAIH,GANQ,EAMN,CAACD,UAAD,CANM,CAAT;;AAQA,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACAX,IAAAA,WAAW,CAACW,KAAD,CAAX;AACH,GAHD;;AAKA,QAAME,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;AAEAlB,IAAAA,MAAM,GAAGD,EAAE,CAACG,IAAD,CAAX;AACAF,IAAAA,MAAM,CAACmB,IAAP,CAAY,aAAZ,EAA2BhB,KAA3B;AACAiB,IAAAA,aAAa,CAACjB,KAAD,CAAb;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAPD;;AASA,QAAMgB,aAAa,GAAIV,IAAD,IAAU;AAC5B,QAAIC,QAAQ,GAAG,CAAC,GAAGN,IAAJ,CAAf;AACAC,IAAAA,UAAU,CAAC,CAAC,GAAGK,QAAJ,EAAcD,IAAd,CAAD,CAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,GAJD;;AAQA,sBAAO,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,IAAA,QAAQ,EAAIM,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFF,CAAP;AAYH,CA5DD;;AA8DA,eAAeZ,IAAf","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = () => {\n\n    const port = 'localhost:3000'\n    const [input, updateInput] = useState(\"\");\n    const [text, updateText] = useState([]);\n\n    useEffect( ()=> {\n       socket = io(port)\n       console.log(socket)\n       \n    },[port]);\n\n    const addMessage = useCallback((data) => {\n        let copyText = [...text];\n        updateText(...copyText, data);\n        \n    }, [text]);\n\n    useEffect( () => {\n        socket = io(port);\n        socket.on('message', (data) => {\n            addMessage(data);\n            console.log(data)\n        })\n    }, [addMessage])\n\n    const onChange = (e) => {\n        let value = e.target.value;\n        updateInput(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        socket = io(port)\n        socket.emit('new_message', input);\n        addOwnMessage(input);\n        updateInput(\"\");\n    }\n\n    const addOwnMessage = (data) => {\n        let copyText = [...text];\n        updateText([...copyText, data]);\n        console.log(copyText)\n    };\n\n\n\n    return <>\n             <h1>Chat</h1>\n             <form onSubmit = {onSubmit}>\n                 <input onChange={onChange}></input>\n                 <button></button>\n             </form>\n            {/*  {text.map(data => {\n                 console.log(data)\n                 return <p key={data}>{data}</p>\n             })\n             }  */}\n           </>\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}