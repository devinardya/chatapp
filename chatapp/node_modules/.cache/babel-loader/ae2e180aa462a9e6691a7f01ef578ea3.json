{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Login/Login.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../Login/login.scss';\nimport { MdCheckCircle } from \"react-icons/md\";\nimport { MdCancel } from \"react-icons/md\";\nimport { AiFillWechat } from \"react-icons/ai\";\n\nconst Login = () => {\n  const [username, updateUsername] = useState(\"\");\n  const [status, updateStatus] = useState(false);\n  const [name, updateName] = useState(\"\");\n  let warncolor;\n  let warncolor2;\n  let newcolor;\n  let getSubmit;\n  let validateIcon1;\n  let validateIcon2;\n\n  const onChange = e => {\n    let value = e.target.value;\n    updateUsername(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateStatus(true);\n    updateName(username);\n    updateUsername(\"\");\n  };\n\n  const onNotSubmit = e => {\n    e.preventDefault();\n  };\n\n  if (status) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/chat',\n        state: {\n          user: name\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    });\n  }\n\n  ;\n  let regex = /[!\"#€%&\\/()=?£$∞§≈±©~™…+^¨*':;.,$°§@\\[\\]{}]/g;\n  let notValidInput = regex.test(username); // if user enter a character that is not alphabet, numbers, empty space,  - or _ and left the input box empty or more than 12 characters\n  // then the input is not valid. \n\n  if (username.length === 0) {\n    warncolor = {\n      color: \"red\"\n    };\n    warncolor2 = {\n      color: \"red\"\n    };\n    newcolor = {\n      color: \"red\"\n    };\n    getSubmit = onNotSubmit;\n    validateIcon1 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    });\n    validateIcon2 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    });\n  } else if (username.length > 12) {\n    warncolor = {\n      color: \"red\"\n    };\n    warncolor2 = {\n      color: \"green\"\n    };\n    newcolor = {\n      color: \"red\"\n    };\n    getSubmit = onNotSubmit;\n    validateIcon1 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    });\n    validateIcon2 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }); //console.log(\"this is false\")\n  } else if (notValidInput) {\n    warncolor = {\n      color: \"green\"\n    };\n    warncolor2 = {\n      color: \"red\"\n    };\n    newcolor = {\n      color: \"red\"\n    };\n    getSubmit = onNotSubmit;\n    validateIcon1 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    });\n    validateIcon2 = /*#__PURE__*/React.createElement(MdCancel, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }); //console.log(\"notvalidinput\")\n  } else {\n    warncolor = {\n      color: \"green\"\n    };\n    warncolor2 = {\n      color: \"green\"\n    };\n    newcolor = {\n      color: \"#252525\"\n    };\n    getSubmit = onSubmit;\n    validateIcon1 = /*#__PURE__*/React.createElement(MdCheckCircle, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    });\n    validateIcon2 = /*#__PURE__*/React.createElement(MdCheckCircle, {\n      className: \"icons\",\n      size: \"12px\",\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }); //console.log(\"this is trueeee\")\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block__loginPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"block__loginPage--form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block__loginPage--form-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"block__loginPage--login-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AiFillWechat, {\n    className: \"icons\",\n    size: \"60px\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 72\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Welcome!\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Please log in to join the chat room!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block__loginPage--form-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"block__loginPage--input-box\",\n    type: \"text\",\n    placeholder: \"Username\",\n    onChange: onChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block__loginPage--warning\",\n    style: warncolor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, validateIcon1, \"Username have to be between 1 to 12 characters!\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block__loginPage--warning\",\n    style: warncolor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, validateIcon2, \"Username can only contains uppercase, lowercase, hypen (-), underscore (_), numbers and empty space.\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"block__loginPage--login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Log in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/admin/Documents/EC-Projects/EC-Backend-Lab/chatapp/src/Login/Login.js"],"names":["React","useState","Redirect","MdCheckCircle","MdCancel","AiFillWechat","Login","username","updateUsername","status","updateStatus","name","updateName","warncolor","warncolor2","newcolor","getSubmit","validateIcon1","validateIcon2","onChange","e","value","target","onSubmit","preventDefault","onNotSubmit","pathname","state","user","regex","notValidInput","test","length","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../Login/login.scss';\nimport { MdCheckCircle } from \"react-icons/md\";\nimport { MdCancel } from \"react-icons/md\";\nimport { AiFillWechat } from \"react-icons/ai\";\n\n\nconst Login = () => {\n\n    const [username, updateUsername] = useState(\"\");\n    const [status, updateStatus] = useState(false);\n    const [name, updateName] = useState(\"\");\n    let warncolor;\n    let warncolor2;\n    let newcolor;\n    let getSubmit;\n    let validateIcon1;\n    let validateIcon2;\n\n    const onChange = (e) => {\n        let value = e.target.value;\n        updateUsername(value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        updateStatus(true);\n        updateName(username);\n        updateUsername(\"\");\n    }\n\n    const onNotSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    if(status) {\n        return <Redirect to={{\n                pathname: '/chat',\n                state: { user: name }\n            }}\n        />\n    }; \n\n    let regex = /[!\"#€%&\\/()=?£$∞§≈±©~™…+^¨*':;.,$°§@\\[\\]{}]/g;\n    let notValidInput = regex.test(username);\n\n    // if user enter a character that is not alphabet, numbers, empty space,  - or _ and left the input box empty or more than 12 characters\n    // then the input is not valid. \n    if (username.length === 0 ) {\n        warncolor = {color: \"red\"};\n        warncolor2 = {color: \"red\"};\n        newcolor = {color: \"red\"};\n        getSubmit = onNotSubmit;\n        validateIcon1 = <MdCancel className =\"icons\" size=\"12px\" color=\"red\" />\n        validateIcon2 = <MdCancel className =\"icons\" size=\"12px\" color=\"red\" />\n    } else if (username.length > 12 ) {\n        warncolor = {color: \"red\"};\n        warncolor2 = {color: \"green\"};\n        newcolor = {color: \"red\"};\n        getSubmit = onNotSubmit;\n        validateIcon1 = <MdCancel className =\"icons\" size=\"12px\" color=\"red\" />\n        validateIcon2 = <MdCancel className =\"icons\" size=\"12px\" color=\"green\" />\n        //console.log(\"this is false\")\n    } else if (notValidInput){\n        warncolor = {color: \"green\"};\n        warncolor2 = {color: \"red\"};\n        newcolor = {color: \"red\"};\n        getSubmit = onNotSubmit;\n        validateIcon1 = <MdCancel className =\"icons\" size=\"12px\" color=\"green\" />\n        validateIcon2 = <MdCancel className =\"icons\" size=\"12px\" color=\"red\" />\n        //console.log(\"notvalidinput\")\n    } else {\n        warncolor = {color: \"green\"};\n        warncolor2 = {color: \"green\"};\n        newcolor = {color: \"#252525\"};\n        getSubmit = onSubmit;\n        validateIcon1 = <MdCheckCircle className =\"icons\" size=\"12px\" color=\"green\" />\n        validateIcon2 = <MdCheckCircle className =\"icons\" size=\"12px\" color=\"green\" />\n        //console.log(\"this is trueeee\")\n    }\n\n\n    return <div className = \"block__loginPage\">\n                <form className = \"block__loginPage--form\" onSubmit = {onSubmit}>\n                    <div className=\"block__loginPage--form-top\">\n                        <span className=\"block__loginPage--login-icon\"><AiFillWechat className =\"icons\" size=\"60px\" color=\"white\" /></span> \n                        <h3>Welcome!</h3>\n                        <h5>Please log in to join the chat room!</h5>\n                    </div>\n                    <div className=\"block__loginPage--form-bottom\">\n                        <input className=\"block__loginPage--input-box\" type=\"text\" placeholder=\"Username\" onChange={onChange} value={username}/>\n                        <label className=\"block__loginPage--warning\" style={warncolor}>{validateIcon1}Username have to be between 1 to 12 characters!</label>\n                        <label className=\"block__loginPage--warning\" style={warncolor2}>{validateIcon2}Username can only contains uppercase, lowercase, hypen (-), underscore (_), numbers and empty space.</label>\n                    </div>\n                    <button className=\"block__loginPage--login-button\">Log in</button>\n                </form>\n            </div>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}